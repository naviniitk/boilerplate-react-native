name: preview_on_pr_update

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # sonarqube:
  #   name: analyze
  #   # only run when updating an 'Open' PR
  #   if: github.event.pull_request.state == 'open'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         # Disabling shallow clone is recommended for improving relevancy of reporting
  #         fetch-depth: 0
  #     - name: sonarqube-scan-pullrequest
  #       uses: sonarsource/sonarqube-scan-action@master
  #       if: ${{ github.base_ref == 'main' }}
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #       with:
  #         args: >
  #           -Dsonar.pullrequest.key=${{ github.event.number }}
  #           -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
  #           -Dsonar.pullrequest.base=${{ github.base_ref }}
  #           -Dsonar.qualitygate.wait=true
  #           -Dsonar.qualitygate.timeout=1000
  
  checks:
    runs-on: ubuntu-latest
    strategy:
      # turn off fail fast, let all the checks run irrespective of failures
      fail-fast: false
      matrix:
        check: ['yarn:lint', 'compose:test']
    steps:
      - name: Checkout (app)
        uses: actions/checkout@v3
        with:
          path: app

      - name: Run check
        uses: ./app/.github/actions/check
        with:
          check: ${{ matrix.check }}
  
  deploy:
    runs-on: ubuntu-latest
    steps: 
      - name: Export environment variables
        shell: bash
        run: echo "export RELEASE_KEYSTORE=`cat ${{ secrets.RELEASE_KEYSTORE }}` RELEASE_KEYSTORE_PASSPHRASE=${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }} SERVICE_ACCOUNT=`cat ${{ secrets.SERVICE_ACCOUNT }}` SERVICE_ACCOUNT_PASSPHRASE=${{ secrets.SERVICE_ACCOUNT_PASSPHRASE }}" >> .env

      - name: Decrypt Android keys
        run: docker run -t boilerplate-react-native /bin/bash -c "source .env sh scripts/decrypt_android_keys.sh"
        # env: 
        #   RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        #   RELEASE_KEYSTORE_PASSPHRASE: ${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}
        #   SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
        #   SERVICE_ACCOUNT_PASSPHRASE: ${{ secrets.SERVICE_ACCOUNT_PASSPHRASE }}
      
      - name: Upload to PlayStore 
        run: docker run -t boilerplate-react-native /bin/sh -c 'cd android && fastlane android release_production RELEASE_KEYSTORE_PASSWORD:${{secrets.RELEASE_KEYSTORE_PASSWORD}} RELEASE_KEYSTORE_KEY_PASSWORD:${{secrets.RELEASE_KEYSTORE_KEY_PASSWORD}} RELEASE_KEYSTORE_ALIAS:${{secrets.RELEASE_KEYSTORE_ALIAS}}'
