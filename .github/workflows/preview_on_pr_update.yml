name: preview_on_pr_update

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: analyze
    # only run when updating an 'Open' PR
    if: github.event.pull_request.state == 'open'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: sonarqube-scan-pullrequest
        uses: sonarsource/sonarqube-scan-action@master
        if: ${{ github.base_ref == 'main' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=1000

  build:
    runs-on: ubuntu-latest
    outputs:
      image_ref: ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/boilerplate-react-native@${{ steps.build.outputs.image_digest }}
    steps:
      - name: Checkout (app)
        uses: actions/checkout@v3
        # make sure to keep checked in code at different directory to avoid colliding with docker caching
        with:
          path: app

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: |
          BRANCH_NAME=$(echo ${{ github.event.pull_request.head.ref }} | sed -e 's/^refs\/heads\///g')
          BRANCH_HASH=$(sha1sum < <(printf '%s' $BRANCH_NAME) | cut -c -15)

          echo "##[set-output name=branch_hash;]$(echo $BRANCH_HASH)"

      - name: Build application
        id: build
        uses: ./app/.github/actions/build
        with:
          tags: ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/boilerplate-react-native:${{ steps.extract_branch.outputs.branch_hash }}
          build_args: NODE_CONFIG_ENV=preview
          build_secrets: ''
          context: app/
          docker_registry: ${{ vars.DOCKER_REGISTRY }}
          docker_username: ${{ vars.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
  
  checks:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      # turn off fail fast, let all the checks run irrespective of failures
      fail-fast: false
      matrix:
        check: ['yarn:lint', 'compose:test']
    steps:
      - name: Checkout (app)
        uses: actions/checkout@v3
        with:
          path: app

      - name: Run check
        uses: ./app/.github/actions/check
        with:
          check: ${{ matrix.check }}
          image: ${{ needs.build.outputs.image_ref }}
          tag: boilerplate-react-native
          docker_registry: ${{ vars.DOCKER_REGISTRY }}
          docker_username: ${{ vars.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: Docker setup
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker pull
        shell: bash
        run: |
          docker pull ${{ needs.build.outputs.image_ref }}
          docker tag ${{ needs.build.outputs.image_ref }} boilerplate-react-native

      - name: Export environment variables
        shell: bash
        run: echo "export RELEASE_KEYSTORE=`cat ${{ secrets.RELEASE_KEYSTORE }}` RELEASE_KEYSTORE_PASSPHRASE=${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }} SERVICE_ACCOUNT=`cat ${{ secrets.SERVICE_ACCOUNT }}` SERVICE_ACCOUNT_PASSPHRASE=${{ secrets.SERVICE_ACCOUNT_PASSPHRASE }}" >> .env

      - name: Decrypt Android keys
        run: docker run -t boilerplate-react-native /bin/bash -c "source .env sh scripts/decrypt_android_keys.sh"
        # env: 
        #   RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        #   RELEASE_KEYSTORE_PASSPHRASE: ${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}
        #   SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
        #   SERVICE_ACCOUNT_PASSPHRASE: ${{ secrets.SERVICE_ACCOUNT_PASSPHRASE }}
      
      - name: Upload to PlayStore 
        run: docker run -t boilerplate-react-native /bin/sh -c 'cd android && fastlane android release_production RELEASE_KEYSTORE_PASSWORD:${{secrets.RELEASE_KEYSTORE_PASSWORD}} RELEASE_KEYSTORE_KEY_PASSWORD:${{secrets.RELEASE_KEYSTORE_KEY_PASSWORD}} RELEASE_KEYSTORE_ALIAS:${{secrets.RELEASE_KEYSTORE_ALIAS}}'
